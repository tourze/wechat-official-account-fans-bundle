<?php

declare(strict_types=1);

namespace Tourze\WechatOfficialAccountFansBundle\Tests\Request\Tag;

use PHPUnit\Framework\Attributes\CoversClass;
use PHPUnit\Framework\TestCase;
use Tourze\WechatOfficialAccountFansBundle\Request\Tag\BatchTagUsersRequest;
use WechatOfficialAccountBundle\Entity\Account;

/**
 * @internal
 */
#[CoversClass(BatchTagUsersRequest::class)]
final class BatchTagUsersRequestTest extends TestCase
{
    public function testGetRequestPath(): void
    {
        $request = new BatchTagUsersRequest();

        $this->assertSame('https://api.weixin.qq.com/cgi-bin/tags/members/batchtagging', $request->getRequestPath());
    }

    public function testGetRequestMethod(): void
    {
        $request = new BatchTagUsersRequest();

        $this->assertSame('POST', $request->getRequestMethod());
    }

    public function testTagidGetterSetter(): void
    {
        $request = new BatchTagUsersRequest();

        $this->assertNull($request->getTagid());

        $request->setTagid(123);
        $this->assertSame(123, $request->getTagid());
    }

    public function testOpenidListGetterSetter(): void
    {
        $request = new BatchTagUsersRequest();

        $this->assertSame([], $request->getOpenidList());

        $openidList = ['openid1', 'openid2'];
        $request->setOpenidList($openidList);
        $this->assertSame($openidList, $request->getOpenidList());
    }

    public function testAddOpenid(): void
    {
        $request = new BatchTagUsersRequest();

        $request->addOpenid('openid1');
        $this->assertSame(['openid1'], $request->getOpenidList());

        $request->addOpenid('openid2');
        $this->assertSame(['openid1', 'openid2'], $request->getOpenidList());
    }

    public function testAddOpenidDoesNotAddDuplicates(): void
    {
        $request = new BatchTagUsersRequest();

        $request->addOpenid('openid1');
        $request->addOpenid('openid1'); // Same openid

        $this->assertSame(['openid1'], $request->getOpenidList());
    }

    public function testGetRequestOptions(): void
    {
        $account = new Account();
        $account->setAccessToken('test_access_token');

        $request = new BatchTagUsersRequest();
        $request->setAccount($account);
        $request->setTagid(123);
        $request->setOpenidList(['openid1', 'openid2']);

        $options = $request->getRequestOptions();

        $this->assertIsArray($options);
        $this->assertArrayHasKey('query', $options);
        $this->assertArrayHasKey('json', $options);
        $this->assertSame([
            'access_token' => 'test_access_token',
        ], $options['query']);
        $this->assertSame([
            'tagid' => 123,
            'openid_list' => ['openid1', 'openid2'],
        ], $options['json']);
    }
}
